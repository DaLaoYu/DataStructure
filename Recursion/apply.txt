1.斐波那契数列
描述：
我们可以用数学函数来定义：
         0，当n=0
F(n) =   1，当n=1
         F(n-1)+F(n-2)，当n>1

2.编写一个递归函数，实现将输入的任意长度的字符串反向输出的功能。例如输入字符串FishC,则输出字符串ChsiF。
void print(){
	char a;
	scanf(“%c”, &a);
if( a !=‘#’)  print();
if( a !=‘#’)  printf(“%c”, a);
}


3.汉诺塔
一位法国数学家曾编写过一个印度的古老传说：在世界中心贝拿勒斯的圣庙里，一块黄铜板上插着三根宝石针。印度教的主神梵天在创造世界的时候，在其中一根针上从下到上地穿好了由大到小的64片金片，这就是所谓的汉诺塔。不论白天黑夜，总有一个僧侣在按照下面的法则移动这些金片：一次只移动一片，不管在哪根针上，小片必须在大片上面。

这其实也是一个经典的递归问题。
我们可以做这样的考虑：
先将前63个盘子移动到Y上，确保大盘在小盘下。
再将最底下的第64个盘子移动到Z上。
最后将Y上的63个盘子移动到Z上。


4.八皇后问题
八皇后问题是一个古老而著名的问题，是回溯算法的典型例题（这节课小甲鱼先用递归算法来解）。
该问题是十九世纪著名的数学家高斯1850年提出：
在8X8格的国际象棋上摆放八个皇后，使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法。


